!function(){"use strict";class e{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}resetValidation(){this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}_toggleButtonState(){return this._hasInvalidInput(this._inputEls)?this.disableButton():this.enableButton()}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this.disableButton(),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class t{constructor(e){let{data:t,selector:s,handleCardClick:r,handleLikeClick:i,handleDeleteClick:n}=e;this._name=t.name,this._link=t.link,this._cardSelector=s,this._handleCardClick=r,this._likes=t.likes,this._cardId=t._id,this._userId=t.userId,this._ownerId=t.owner._id,this._handleLikeClick=i,this._handleDeleteClick=n}_setEventListeners(){this._likeButton.addEventListener("click",(()=>this._handleLikeClick(this))),this._deleteButton.addEventListener("click",(()=>this._handleDeleteClick(this))),this._imageElement.addEventListener("click",(()=>this._handleCardClick({link:this._link,name:this._name})))}_handleLikeButton(){this.isLiked()?this._likeButton.classList.add("cards__like-button_active"):this._likeButton.classList.remove("cards__like-button_active")}deleteCard(){this._element.remove(),this._element=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}showLikes(e){this._likes=e||[],this._likeCounter.textContent=this._likes.length,this._handleLikeButton()}isLiked(){return this._likes.some((e=>e._id===this._userId))}_removeDeleteButton(){this._userId!==this._ownerId&&this._deleteButton.remove()}getView(){return this._element=this._getTemplate(),this._imageElement=this._element.querySelector(".cards__image"),this._elementTitle=this._element.querySelector(".cards__location"),this._imageElement.src=this._link,this._imageElement.alt=this._name,this._elementTitle.textContent=this._name,this._likeButton=this._element.querySelector(".cards__like-button"),this._deleteButton=this._element.querySelector(".cards__delete"),this._likeCounter=this._element.querySelector(".cards__like-counter"),this.showLikes(this._likes),this._setEventListeners(),this._removeDeleteButton(),this._element}}const s=document.querySelector(".profile__edit-button"),r=document.querySelector("#add-button"),i=document.querySelector("#avatar-button"),n=document.querySelector(".modal__input_type_name"),o=document.querySelector(".modal__input_type_title"),a={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};class l{constructor(e){let{modalSelector:t}=e;this._modal=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}openModal(){this._modal.classList.add("modal_open"),document.addEventListener("keyup",this._handleEscClose)}closeModal(){this._modal.classList.remove("modal_open"),document.removeEventListener("keyup",this._handleEscClose)}_handleEscClose(e){e.preventDefault(),"Escape"===e.key&&this.closeModal()}setEventListeners(){this._modal.addEventListener("mousedown",(e=>{e.target.closest(".modal__content")&&!e.target.classList.contains("modal__close-button")||this.closeModal()}))}}class d extends l{constructor(e){let{modalSelector:t,handleFormSubmit:s,resetOnClose:r}=e;super({modalSelector:t}),this._resetOnClose=r,this._modalForm=this._modal.querySelector(".modal__form"),this._inputList=this._modalForm.querySelectorAll(".modal__input"),this._handleFormSubmit=s,this._submitButton=this._modal.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent}_getInputValues(){const e={};return this._inputList.forEach((t=>e[t.name]=t.value)),e}closeModal(){this._resetOnClose&&this._modalForm.reset(),super.closeModal()}setEventListeners(){this._modalForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}setSubmitText(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}}class h{constructor(e,t){let{items:s,renderer:r}=e;this._initialArray=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._initialArray.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}const u=new class{constructor(e,t){this._baseUrl=e,this._headers=t}_handleServerResponse(e){if(e.ok)return e.json();Promise.reject(e.status)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleServerResponse)}getUserInfo(){return fetch(this._baseUrl+"/users/me",{headers:this._headers}).then(this._handleServerResponse)}editUserInfo(e){return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._handleServerResponse)}editAvatar(e){return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(this._handleServerResponse)}postCard(e){return fetch(this._baseUrl+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._handleServerResponse)}deleteCard(e){return fetch(this._baseUrl+"/cards/"+e,{method:"DELETE",headers:this._headers}).then(this._handleServerResponse)}showLikes(e){return fetch(`${this._baseUrl}/cards/likes${e}`,{headers:this.headers}).then(this._handleServerResponse)}addLikes(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"PUT",headers:this._headers}).then(this._handleServerResponse)}removeLikes(e){return fetch(this._baseUrl+"/cards/likes/"+e,{method:"DELETE",headers:this._headers}).then(this._handleServerResponse)}}("https://around.nomoreparties.co/v1/group-12",{authorization:"e3b84c1e-ff20-43fa-83a0-2b037664a87a","Content-Type":"application/json"});let c=null,_=null;const m=new class{constructor(e){let{userNameSelector:t,userTitleSelector:s,userAvatarSelector:r}=e;this._userName=document.querySelector(t),this._userTitle=document.querySelector(s),this._userAvatar=document.querySelector(r)}getUserInfo(){return{userName:this._userName.textContent,userTitle:this._userTitle.textContent,userAvatar:this._userAvatar.src}}setUserInfo(e){let{name:t,about:s,avatar:r}=e;this._userName.textContent=t,this._userTitle.textContent=s,r&&(this._userAvatar.src=r)}}({userNameSelector:".profile__name",userTitleSelector:".profile__title",userAvatarSelector:".profile__image"});function v(e,s){const r=new t({data:{...e,userId:s},selector:"#card-template",handleCardClick:()=>{E.openModal(e)},handleLikeClick:e=>{r.isLiked()?u.removeLikes(e._cardId).then((e=>{r.showLikes(e.likes)})).catch((e=>{console.log(`An error has occured ${e}`)})):u.addLikes(e._cardId).then((e=>{r.showLikes(e.likes)})).catch((e=>{console.log(`An error has occured ${e}`)}))},handleDeleteClick:e=>{f.confirmDelete((()=>{f.setSubmitText(!0,"Deleting..."),u.deleteCard(e._cardId).then((()=>{e.deleteCard(),f.closeModal()})).catch((e=>{console.log(`An error has occured ${e}`)})).finally((()=>f.setSubmitText(!1)))})),f.openModal()}});return r.getView()}Promise.all([u.getUserInfo(),u.getInitialCards()]).then((e=>{let[t,s]=e;_=t._id,m.setUserInfo({name:t.name,about:t.about,avatar:t.avatar}),c=new h({items:s,renderer:e=>{c.addItem(v(e,_))}},".cards__array"),c.renderItems()})).catch((e=>{console.log(`An error has occured ${e}`)})),new e(a,document.querySelector("#edit-profile-form")).enableValidation();const p=new e(a,document.querySelector("#add-card-form"));p.enableValidation();const S=new e(a,document.querySelector("#avatar-form"));S.enableValidation();const b=new d({modalSelector:"#edit-modal",handleFormSubmit:e=>{b.setSubmitText(!0),u.editUserInfo(e).then((e=>{m.setUserInfo(e),b.closeModal()})).catch((e=>{console.log(`An error has occured ${e}`)})).finally((()=>b.setSubmitText(!1)))}});b.setEventListeners();const k=new d({modalSelector:"#add-modal",handleFormSubmit:e=>{k.setSubmitText(!0,"Creating..."),u.postCard(e).then((e=>{c.addItem(v(e,_)),k.closeModal()})).catch((e=>{console.log(`An error has occured ${e}`)})).finally((()=>k.setSubmitText(!1)))},resetOnClose:!0});k.setEventListeners();const C=new d({modalSelector:"#avatar-modal",handleFormSubmit:e=>{C.setSubmitText(!0),u.editAvatar(e).then((e=>{m.setUserInfo(e),C.closeModal()})).catch((e=>console.log(`An error has occured ${e}`))).finally((()=>C.setSubmitText(!1)))},resetOnClose:!0});C.setEventListeners();const E=new class extends l{constructor(e){super(e),this._modalCaption=this._modal.querySelector(".modal__preview-text"),this._modalImage=this._modal.querySelector(".modal__preview-image")}openModal(e){let{name:t,link:s}=e;this._modalCaption.textContent=t,this._modalImage.alt=t,this._modalImage.src=s,super.openModal()}}({modalSelector:"#preview-modal"});E.setEventListeners();const f=new class extends l{constructor(e){super(e),this._submitButton=this._modal.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent,this._modalForm=this._modal.querySelector(".modal__form")}setSubmitText(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}confirmDelete(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._modalForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}({modalSelector:"#confirm-modal"});f.setEventListeners(),i.addEventListener("click",(()=>{S.resetValidation(),C.openModal()})),s.addEventListener("click",(()=>{const{userName:e,userTitle:t}=m.getUserInfo();n.value=e,o.value=t,p.resetValidation(),b.openModal()})),r.addEventListener("click",(()=>{p.resetValidation(),k.openModal()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,